//
// Generated file, do not edit! Created by nedtool 5.2 from DLL_PDU.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __DLL_PDU_M_H
#define __DLL_PDU_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0502
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>DLL_PDU.msg:2</tt> by nedtool.
 * <pre>
 * packet Dll_pkt
 * {
 *     int Dll_pkt_id;
 *     int Dll_pkt_type;
 * }
 * </pre>
 */
class Dll_pkt : public ::omnetpp::cPacket
{
  protected:
    int Dll_pkt_id;
    int Dll_pkt_type;

  private:
    void copy(const Dll_pkt& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Dll_pkt&);

  public:
    Dll_pkt(const char *name=nullptr, short kind=0);
    Dll_pkt(const Dll_pkt& other);
    virtual ~Dll_pkt();
    Dll_pkt& operator=(const Dll_pkt& other);
    virtual Dll_pkt *dup() const override {return new Dll_pkt(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getDll_pkt_id() const;
    virtual void setDll_pkt_id(int Dll_pkt_id);
    virtual int getDll_pkt_type() const;
    virtual void setDll_pkt_type(int Dll_pkt_type);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const Dll_pkt& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, Dll_pkt& obj) {obj.parsimUnpack(b);}


#endif // ifndef __DLL_PDU_M_H

